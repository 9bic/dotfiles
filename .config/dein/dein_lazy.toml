[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim']
on_cmd='Denite'
hook_source='source ~/.config/vim/denite.vim'
hook_add='''
let g:denite_split_rule="bot"
let g:denite_winheight=15
let g:denite_enable_start_insert = 0 


" denite outline (only Win)
if has('win32') || ('win64')
  noremap <Leader>t :Denite outline -vertical -winwidth=30 -profile-name=outline -no-start-insert -no-quit<CR><C-w>h
endif

nnoremap <Space><Space> :<C-u>Denite<Space>
nnoremap <Space>b :<C-u>Denite buffer<CR>
nnoremap <Space>g :<C-u>Denite grep -no-quit -mode=normal<CR>
nnoremap <Space>* :<C-u>DeniteCursorWord line -no-quit -mode=normal<CR>
nnoremap <Space>fm :<C-u>Denite file_mru<CR>
nnoremap <Space>fi :<C-u>Denite file_rec -no-quit -mode=normal<CR>
nnoremap <Space>cd :<C-u>Denite file -no-quit<CR>
nnoremap <Space>q <C-u>Denite quickfix -no-quit -mode=normal<CR>
nnoremap <Space>l <C-u>Denite line -no-quit<CR>
nnoremap <Space>cm <C-u>Denite command<CR>
nnoremap <Space>o <C-u>Denite outline -profile-name=outline -mode=normal -no-quit<CR>
'''

hook_post_source = '''
call denite#custom#var('file_rec', 'command',
\ ['ag', '--follow', '--nocolor', '--nogroup', '--hidden', '-g', ''])
call denite#custom#var('grep', 'command', ['ag'])
call denite#custom#var('grep', 'default_opts',
      \ ['-i', '--vimgrep'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', [])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])
'''

[[plugins]]
repo = 'landaire/deoplete-swift'
on_ft = 'swift'
hook_add = '''
let g:quickrun_config = {}
if has('mac')
  let g:quickrun_config['swift'] = {
        \ 'command': 'xcrun',
        \ 'cmdopt': 'swift',
        \ 'exec': '%c %o %s',
        \}
endif

if has('unix') && executable('sourcekitten')
  let g:quickrun_config['swift'] = {
        \ 'command': 'swift',
        \ 'cmdopt': 'build',
        \ 'exec': '%c %o',
        \}
endif

let g:deoplete#sources#swift#daemon_autostart = 1
'''

#[[plugins]]
#repo = 'mitsuse/autocomplete-swift'
#on_ft = 'swift'
#hook_add = '''
#autocmd BufNewFile,BufRead *.swift set filetype=swift
#'''

[[plugins]]
repo  = 'othree/html5.vim'
on_ft = 'html'


[[plugins]]
repo = 'keith/swift.vim'
on_ft = 'swift'

[[plugins]]
repo = 'pbogut/deoplete-padawan'
on_ft = 'php'

[[plugins]]
repo = 'jwalton512/vim-blade'
on_ft = 'blade.php'

[[plugins]]
repo = 'othree/yajs.vim'
on_ft = 'javascript'

[[plugins]]
repo = 'leafgarland/typescript-vim.git'
on_ft = 'typescript'
depends = ['LanguageClient-neovim']
hook_add = '''
let g:LanguageClient_serverCommands = {}
if executable('typescript-language-server')
  let g:LanguageClient_serverCommands.typescript = ['typescript-language-server', '--stdio']
  autocmd FileType typescript setlocal omnifunc=LanguageClient#complete
endif
let g:typescript_compiler_binary = 'tsc'
'''

[[plugins]]
repo = 'posva/vim-vue'
on_ft = 'vue'

[[plugins]]
repo = 'mrk21/yaml-vim'
on_ft = 'yaml'

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = 'python'

[[plugins]]
repo = 'ekalinin/Dockerfile.vim'


[[plugins]]
repo = 'hashivim/vim-terraform'
on_ft = 'terraform'
hook_add = '''
let g:terraform_fmt_on_save = 1
'''
